
import random
import time

# Continuously finds min element and moves to beginning until list is sorted
# List -> int
def selection_sort(lt):
    count = 0
    for n in range(len(lt)):
        min_index = n
        for m in range(n + 1, len(lt)):
            count += 1
            if lt[min_index] > lt[m]:
                min_index = m
        lt[n], lt[min_index] = lt[min_index], lt[n]
    return count

# Selection sort using python list
# List -> int
def insertion_sort(lt):
    count = 0
    for index in range(1, len(lt)):
        curr_val = lt[index]
        pos = index
        while pos > 0 and lt[pos - 1] > curr_val:
            count+=1
            lt[pos] = lt[pos - 1]
            pos-=1
        lt[pos] = curr_val
    return count



def main():
    # Code coverage NOT required for main
    # Give the random number generator a seed, so the same sequence of
    # random numbers is generated at each run
    random.seed(1234)

    # Generate 5000 random numbers from 0 to 999,999
    randoms = random.sample(range(1000000), 5000)
    start_time = time.time()
    comps = selection_sort(randoms)
    stop_time = time.time()
    print(comps, stop_time - start_time)


if __name__ == '__main__':
    main()

